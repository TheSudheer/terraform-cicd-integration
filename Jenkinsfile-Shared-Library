#!/usr/bin/env groovy
library identifier: 'devops-shared-lib@master', retriever: modernSCM(
    [
        $class: 'GitSCMSource',
        remote: 'https://github.com/TheSudheer/Jenkins-shared-library.git',
        credentialsId: 'GitHub'
    ]
)

pipeline {
    agent any
    tools {
        gradle 'Gradle 7.6.1'
    }
    options {
        timeout(time: 10, unit: 'MINUTES')
    }
    environment {
        imageName = "kalki2878/java-gradle-app:latest"
    }
    stages {
        stage("build jar") {
            steps {
                script {
                    echo "Starting build jar stage"
                    timeout(time: 3, unit: 'MINUTES') {
                        buildJar() // This shared library function will now run using Java 8.
                    }
                    echo "Finished build jar stage"
                }
            }
        }
        stage("build image") {
            steps {
                script {
                    echo "Starting build image stage"
                    timeout(time: 3, unit: 'MINUTES') {
                        buildImage(env.imageName)
                    }
                    echo "Finished build image stage"
                }
            }
        }
        stage("Configure Kubeconfig and Test Connectivity") {
            steps {
                echo "Starting Configure Kubeconfig and Test Connectivity stage"
                withCredentials([
                    string(credentialsId: 'jenkins_aws_access_key_id', variable: 'AWS_ACCESS_KEY_ID'),
                    string(credentialsId: 'jenkins_aws_secret_access_key', variable: 'AWS_SECRET_ACCESS_KEY')
                ]) {
                    timeout(time: 3, unit: 'MINUTES') {
                        sh '''
                            set -x
                            echo "Verifying AWS CLI version..."
                            aws --version

                            echo "Setting AWS_DEFAULT_REGION to ap-southeast-1..."
                            export AWS_DEFAULT_REGION=ap-southeast-1

                            echo "Updating kubeconfig for cluster demo-cluster..."
                            aws eks update-kubeconfig --region ap-southeast-1 --name demo-cluster

                            echo "Listing Kubernetes nodes..."
                            kubectl get nodes
                            set +x
                        '''
                    }
                }
                echo "Finished Configure Kubeconfig and Test Connectivity stage"
            }
        }
        stage("deploy") {
            environment {
                AWS_ACCESS_KEY_ID = credentials('jenkins_aws_access_key_id')
                AWS_SECRET_ACCESS_KEY = credentials('jenkins_aws_secret_access_key')
                APP_NAME = 'java-gradle-app'
                IMAGE_NAME = "${env.imageName}"
            }
            steps {
                script {
                    echo "Starting deploy stage"
                    timeout(time: 3, unit: 'MINUTES') {
                        sh '''
                            set -x
                            echo "Deploying using kubernetes/deployment.yaml..."
                            envsubst < kubernetes/deployment.yaml | kubectl apply -f -

                            echo "Deploying using kubernetes/service.yaml..."
                            envsubst < kubernetes/service.yaml | kubectl apply -f -
                            set +x
                        '''
                    }
                    echo "Finished deploy stage"
                }
            }
        }
    }
}
